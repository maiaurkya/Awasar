{"ast":null,"code":"var _jsxFileName = \"/home/sakshi/Downloads/CHANDAN/masterPortfolio/src/components/slider/ImageUpload.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 2px;\n  width: 100%;\n  grid-template-columns: repeat(3,minmax(100px, 1fr));\n`;\n\nclass ImageUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ImagePreviewUrl: []\n    };\n\n    this.handleFile = event => {\n      console.log(event.target.files);\n      Array.from(event.target.files).map(file => {\n        let reader = new FileReader();\n\n        reader.onloadend = () => {\n          this.setState({\n            file,\n            ImagePreviewUrl: [...this.state.ImagePreviewUrl, reader.result]\n          });\n        };\n\n        reader.readAsDataURL(file);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      multiple: true,\n      onChange: this.handleFile,\n      type: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, this.state.ImagePreviewUrl && this.state.ImagePreviewUrl.map(imageUrl => /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"400px\"\n      },\n      src: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/home/sakshi/Downloads/CHANDAN/masterPortfolio/src/components/slider/ImageUpload.js"],"names":["React","styled","Grid","div","ImageUpload","Component","state","ImagePreviewUrl","handleFile","event","console","log","target","files","Array","from","map","file","reader","FileReader","onloadend","setState","result","readAsDataURL","render","imageUrl","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;;CAAxB;;AAOA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,eAAe,EAAE;AADX,KADgC;;AAAA,SAKxCC,UALwC,GAK3BC,KAAK,IAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AAEAC,MAAAA,KAAK,CAACC,IAAN,CAAWN,KAAK,CAACG,MAAN,CAAaC,KAAxB,EAA+BG,GAA/B,CAAmCC,IAAI,IAAI;AACzC,YAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,QAAAA,MAAM,CAACE,SAAP,GAAmB,MAAM;AACvB,eAAKC,QAAL,CAAc;AACZJ,YAAAA,IADY;AAEZV,YAAAA,eAAe,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,eAAf,EAAgCW,MAAM,CAACI,MAAvC;AAFL,WAAd;AAID,SALD;;AAOAJ,QAAAA,MAAM,CAACK,aAAP,CAAqBN,IAArB;AACD,OAXD;AAYD,KApBuC;AAAA;;AAsBxCO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,EAAE,KAAKhB,UAA/B;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWC,eAAX,IACC,KAAKD,KAAL,CAAWC,eAAX,CAA2BS,GAA3B,CAA+BS,QAAQ,iBACrC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAgC,MAAA,GAAG,EAAED,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CAJF,CADF;AAaD;;AApCuC;;AAuC1C,eAAerB,WAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 2px;\n  width: 100%;\n  grid-template-columns: repeat(3,minmax(100px, 1fr));\n`;\n\nclass ImageUpload extends React.Component {\n  state = {\n    ImagePreviewUrl: []\n  };\n\n  handleFile = event => {\n    console.log(event.target.files);\n\n    Array.from(event.target.files).map(file => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          file,\n          ImagePreviewUrl: [...this.state.ImagePreviewUrl, reader.result]\n        });\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <input multiple onChange={this.handleFile} type=\"file\" />\n        </div>\n        <Grid>\n          {this.state.ImagePreviewUrl &&\n            this.state.ImagePreviewUrl.map(imageUrl => (\n              <img style={{ width: \"400px\" }} src={imageUrl} />\n            ))}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n\n"]},"metadata":{},"sourceType":"module"}